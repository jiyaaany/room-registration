{"version":3,"sources":["pages/Home.tsx","hooks/useForm.ts","components/RoomForm.tsx","pages/Register.tsx","pages/Detail.tsx","components/RoomCard.tsx","pages/List.tsx","pages/Edit.tsx","App.tsx","reportWebVitals.ts","roomItems.ts","index.tsx"],"names":["Home","CardDeck","className","Card","border","to","Body","Title","Text","useForm","initialState","useState","formData","setFormData","nextFormData","prevFormData","localStorage","setItem","JSON","stringify","RoomForm","onSubmit","onChange","changeMaintenanceFee","toggleMaintenanceFee","hasMaintenanceFee","addMaintenanceFeeItems","setLeasableArea","buttonText","Form","Group","Control","size","name","value","address","type","placeholder","detailAddress","as","realEstate","Check","inline","id","label","checked","realEstatePriceType","Row","Col","depositAmount","undefined","rentAmount","disabled","maintenanceFee","controlId","onClick","maintenanceFeeItems","includes","isNaN","parseInt","floor","Array","keys","map","v","sunlightDirection","leasableArea","Math","round","min","Number","toFixed","pet","Button","Register","parse","getItem","roomItems","setRoomItems","uniqueString","pk","canceled","thumbnail","setHasMaintenanceFee","showKeepModal","setShowKeepModal","showCompleteModal","setShowCompleteModal","useEffect","target","prevRoomItems","concat","removeItem","prevHasMaintenanceFee","filter","item","Modal","show","onHide","backdrop","centered","Header","closeButton","Footer","variant","storageFormData","Detail","match","find","room","params","roomPK","setRoom","toggleCancel","prevRoom","nextRoom","Img","src","toLocaleString","length","join","RoomCard","List","Tabs","defaultActiveKey","Tab","eventKey","title","xs","md","uncancelledRoom","cancelledRoom","style","position","bottom","left","transform","Edit","history","toString","push","App","Container","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc968a97.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardDeck } from 'react-bootstrap';\nimport { AiOutlineHome } from 'react-icons/ai';\nimport { FaRegListAlt } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nconst Home: React.FC = () => {\n  return (\n    <CardDeck className=\"text-center d-flex align-items-center min-vh-100\">\n      <Card border=\"success\" className=\"register-card\">\n        <Link to=\"/room/register\" className=\"no-deco-link py-5 home-card\">\n          <Card.Body>\n            <Card.Title><AiOutlineHome /> 방 등록하기</Card.Title>\n            <Card.Text>\n              방의 정보를 입력해 방을 등록합니다.\n            </Card.Text>\n          </Card.Body>\n        </Link>\n      </Card>\n      <Card border=\"warning\" className=\"list-card\">\n        <Link to=\"/rooms\" className=\"no-deco-link py-5 home-card\">\n          <Card.Body>\n            <Card.Title><FaRegListAlt /> 방 목록으로 가기</Card.Title>\n            <Card.Text>\n              등록되어 있는 방의 목록 페이지로 이동합니다.\n            </Card.Text>\n          </Card.Body>\n        </Link>\n      </Card>\n    </CardDeck>\n  );\n}\n\nexport default Home;","import { useState } from 'react';\nimport { FormData } from '../types/instances';\n\nconst useForm = (initialState: FormData): [FormData, (nextFormData: FormData | ((prevFormData: FormData) => FormData)) => void] => {\n  const [formData, setFormData] = useState<FormData>(initialState);\n\n  const onChange = (nextFormData: FormData | ((prevFormData: FormData) => FormData)) => {\n    setFormData((prevFormData: FormData) => {\n      if (typeof nextFormData === 'function') {\n        localStorage.setItem('tempRoomItem', JSON.stringify(nextFormData(prevFormData)));\n        return nextFormData(prevFormData);\n      } else {\n        localStorage.setItem('tempRoomItem', JSON.stringify(nextFormData));\n        return nextFormData;\n      }\n    });\n  };\n\n  return [formData, onChange];\n}\n\nexport default useForm;","import React from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { FormData } from '../types/instances';\n\ntype P = {\n  onSubmit: () => void,\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  formData: FormData,\n  changeMaintenanceFee: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  toggleMaintenanceFee: () => void,\n  hasMaintenanceFee: boolean,\n  addMaintenanceFeeItems: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  setLeasableArea: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  buttonText: string,\n};\n\nconst RoomForm: React.FC<P> = ({\n  onSubmit,\n  onChange,\n  formData,\n  changeMaintenanceFee,\n  toggleMaintenanceFee,\n  hasMaintenanceFee,\n  addMaintenanceFeeItems,\n  setLeasableArea,\n  buttonText,\n}: P) => (\n  <Form onSubmit={onSubmit}>\n    {/* 주소 */}\n    <Form.Group>\n      <h4>주소</h4>\n      <Form.Control size=\"lg\" name=\"address\" onChange={onChange} value={formData.address} type=\"text\" placeholder=\"건물주소 또는 건물명을 검색하세요.\" />\n      <Form.Control size=\"lg\" name=\"detailAddress\" onChange={onChange} value={formData.detailAddress} type=\"text\" placeholder=\"상세 주소\u001c(동/호수를 입력해주세요.)\" />\n    </Form.Group>\n\n    {/* 종류 */}\n    <Form.Group>\n      <h4>종류</h4>\n      <Form.Control as=\"select\" size=\"lg\" name=\"realEstate\" onChange={onChange} value={formData.realEstate}>\n        <option>매물종류를 선택해주세요.</option>\n        <option value=\"ONE_ROOM\">원룸</option>\n        <option value=\"TWO_ROOM\">투룸</option>\n        <option value=\"APARTMENT\">아파트</option>\n        <option value=\"EFFICIENCY_APARTMENT\">오피스텔</option>\n      </Form.Control>\n    </Form.Group>\n\n    {/* 가격 */}\n    <Form.Group>\n      <h4>가격</h4>\n      <Form.Check\n        inline\n        name=\"realEstatePriceType\"\n        type=\"radio\"\n        id=\"MONTHLY\"\n        value=\"MONTHLY\"\n        label=\"월세\"\n        checked={formData.realEstatePriceType === 'MONTHLY'}\n        onChange={changeMaintenanceFee}\n      />\n      <Form.Check\n        inline\n        name=\"realEstatePriceType\"\n        type=\"radio\"\n        id=\"JEONSE\"\n        value=\"JEONSE\"\n        label=\"전세\"\n        checked={formData.realEstatePriceType === 'JEONSE'}\n        onChange={changeMaintenanceFee}\n      />\n      <Form.Check\n        inline\n        name=\"realEstatePriceType\"\n        type=\"radio\"\n        id=\"SELLING\"\n        value=\"SELLING\"\n        label=\"매매\"\n        checked={formData.realEstatePriceType === 'SELLING'}\n        onChange={changeMaintenanceFee}\n      />\n\n      <Form.Row>\n        <Col>\n          <Form.Control size=\"lg\" name=\"depositAmount\" type=\"number\" value={formData.depositAmount ? formData.depositAmount : undefined} placeholder=\"보증금\" onChange={onChange} />\n        </Col>\n        {\n          formData.realEstatePriceType === 'MONTHLY' &&\n          <Col>\n            <Form.Control size=\"lg\" name=\"rentAmount\" type=\"number\" value={formData.rentAmount ? formData.rentAmount : undefined} placeholder=\"임대료\" onChange={onChange} />\n          </Col>\n        }\n      </Form.Row>\n    </Form.Group>\n\n    {\n      formData.realEstatePriceType !== 'SELLING' &&\n      (\n        <>\n          {/* 관리비 */}\n          <Form.Group>\n            <h4>관리비</h4>\n            <Form.Row onChange={onChange}>\n              <Col>\n                <Form.Control size=\"lg\" name=\"maintenanceFee\" placeholder=\"관리비\u001c\" type=\"number\" disabled={!hasMaintenanceFee} value={formData.maintenanceFee ? formData.maintenanceFee : undefined} onChange={onChange} />\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formBasicCheckbox\">\n                  <Form.Check type=\"checkbox\" label=\"관리비 없음\u001e\" onClick={toggleMaintenanceFee} />\n                </Form.Group>\n              </Col>\n            </Form.Row>\n          </Form.Group>\n\n          {/* 관리비 항목 */}\n          <Form.Group>\n            <h4>관리비 항목 (중복선택)</h4>\n            <Form.Check\n              inline\n              name=\"maintenanceFeeItems\"\n              type=\"checkbox\"\n              id=\"ELECTRIC\"\n              value=\"ELECTRIC\"\n              label=\"전기\"\n              checked={formData.maintenanceFeeItems.includes('ELECTRIC')}\n              onChange={addMaintenanceFeeItems}\n            />\n            <Form.Check\n              inline\n              name=\"maintenanceFeeItems\"\n              type=\"checkbox\"\n              id=\"GAS\"\n              value=\"GAS\"\n              label=\"가스\"\n              checked={formData.maintenanceFeeItems.includes('GAS')}\n              onChange={addMaintenanceFeeItems}\n            />\n            <Form.Check\n              inline\n              name=\"maintenanceFeeItems\"\n              type=\"checkbox\"\n              id=\"WATERWORKS\"\n              value=\"WATERWORKS\"\n              label=\"수도\"\n              checked={formData.maintenanceFeeItems.includes('WATERWORKS')}\n              onChange={addMaintenanceFeeItems}\n            />\n            <Form.Check\n              inline\n              name=\"maintenanceFeeItems\"\n              type=\"checkbox\"\n              id=\"INTERNET\"\n              value=\"INTERNET\"\n              label=\"인터넷\"\n              checked={formData.maintenanceFeeItems.includes('INTERNET')}\n              onChange={addMaintenanceFeeItems}\n            />\n            <Form.Check\n              inline\n              name=\"maintenanceFeeItems\"\n              type=\"checkbox\"\n              id=\"TV\"\n              value=\"TV\"\n              label=\"TV\"\n              checked={formData.maintenanceFeeItems.includes('TV')}\n              onChange={addMaintenanceFeeItems}\n            />\n          </Form.Group>\n        </>\n      )\n    }\n\n    {/* 층수 */}\n    <Form.Group>\n      <h4>층수</h4>\n      <Form.Check\n        inline\n        name=\"floor\"\n        type=\"radio\"\n        id=\"floors\"\n        value=\"1\"\n        label=\"층수\u001f\"\n        checked={!isNaN(parseInt(formData.floor))}\n        onChange={onChange}\n      />\n      <Form.Check\n        inline\n        name=\"floor\"\n        type=\"radio\"\n        id=\"ROOFTOP\"\n        value=\"ROOFTOP\"\n        label=\"옥탑\"\n        checked={formData.floor === 'ROOFTOP'}\n        onChange={onChange}\n      />\n      <Form.Check\n        inline\n        name=\"floor\"\n        type=\"radio\"\n        id=\"SEMI_BASEMENT\"\n        value=\"SEMI_BASEMENT\"\n        label=\"반지하\"\n        checked={formData.floor === 'SEMI_BASEMENT'}\n        onChange={onChange}\n      />\n      {\n        !['ROOFTOP', 'SEMI_BASEMENT'].includes(formData.floor) &&\n        <Form.Control as=\"select\" size=\"lg\" name=\"floor\" onChange={onChange} value={formData.floor}>\n          {[...Array(80).keys()].map(v => v + 1).map(floor => <option key={floor} value={`${floor}`}>{floor}층</option>)}\n        </Form.Control>\n      }\n    </Form.Group>\n\n    {/* 방향 */}\n    <Form.Group>\n      <h4>방향</h4>\n      <Form.Check\n        inline\n        name=\"sunlightDirection\"\n        type=\"radio\"\n        id=\"EAST\"\n        value=\"EAST\"\n        label=\"동\"\n        checked={formData.sunlightDirection === 'EAST'}\n        onChange={onChange}\n      />\n      <Form.Check\n        inline\n        name=\"sunlightDirection\"\n        type=\"radio\"\n        id=\"WEST\"\n        value=\"WEST\"\n        label=\"서\"\n        checked={formData.sunlightDirection === 'WEST'}\n        onChange={onChange}\n      />\n      <Form.Check\n        inline\n        name=\"sunlightDirection\"\n        type=\"radio\"\n        id=\"SOUTH\"\n        value=\"SOUTH\"\n        label=\"남\"\n        checked={formData.sunlightDirection === 'SOUTH'}\n        onChange={onChange}\n      />\n      <Form.Check\n        inline\n        name=\"sunlightDirection\"\n        type=\"radio\"\n        id=\"NORTH\"\n        value=\"NORTH\"\n        label=\"북\"\n        checked={formData.sunlightDirection === 'NORTH'}\n        onChange={onChange}\n      />\n      <Form.Check\n        inline\n        name=\"sunlightDirection\"\n        type=\"radio\"\n        id=\"SOUTH_EAST\"\n        value=\"SOUTH_EAST\"\n        label=\"남동\"\n        checked={formData.sunlightDirection === 'SOUTH_EAST'}\n        onChange={onChange}\n      />\n      <Form.Check\n        inline\n        name=\"sunlightDirection\"\n        type=\"radio\"\n        id=\"SOUTH_WEST\"\n        value=\"SOUTH_WEST\"\n        label=\"남서\"\n        checked={formData.sunlightDirection === 'SOUTH_WEST'}\n        onChange={onChange}\n      />\n      <Form.Check\n        inline\n        name=\"sunlightDirection\"\n        type=\"radio\"\n        id=\"NORTH_WEST\"\n        value=\"NORTH_WEST\"\n        label=\"북서\"\n        checked={formData.sunlightDirection === 'NORTH_WEST'}\n        onChange={onChange}\n      />\n      <Form.Check\n        inline\n        name=\"sunlightDirection\"\n        type=\"radio\"\n        id=\"NORTH_EAST\"\n        value=\"NORTH_EAST\"\n        label=\"북동\"\n        checked={formData.sunlightDirection === 'NORTH_EAST'}\n        onChange={onChange}\n      />\n    </Form.Group>\n\n    {/* 전용면적 */}\n    <Form.Group>\n      <h4>전용면적</h4>\n      <Form.Control size=\"lg\" name=\"pyeong\" onChange={setLeasableArea} value={formData.leasableArea ? Math.round(formData.leasableArea / 3.30579) : undefined} type=\"number\" placeholder=\"전용 면적을 입력해주세요. (평)\" min={0} />\n      <Form.Control size=\"lg\" name=\"leasableArea\" onChange={setLeasableArea} value={formData.leasableArea ? Number(formData.leasableArea).toFixed(3) : undefined} type=\"number\" placeholder=\"전용 면적을 입력해주세요. (m2)\" min={0} />\n    </Form.Group>\n\n    {/* 반려동물 */}\n    <Form.Group>\n      <h4>반려동물</h4>\n      <Form.Check\n        inline\n        name=\"pet\"\n        type=\"radio\"\n        value=\"true\"\n        label=\"가능\"\n        checked={formData.pet}\n        onChange={onChange}\n      />\n      <Form.Check\n        inline\n        name=\"pet\"\n        type=\"radio\"\n        value=\"false\"\n        label=\"불가능\"\n        checked={!formData.pet}\n        onChange={onChange}\n      />\n    </Form.Group>\n\n    <div className=\"text-center\">\n      <Button size=\"lg\" onClick={onSubmit}>{buttonText}</Button>\n    </div>\n  </Form>\n);\n\nexport default RoomForm;","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport useForm from '../hooks/useForm';\nimport { Button, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Room } from '../types/instances';\nimport uniqueString from 'unique-string';\nimport RoomForm from '../components/RoomForm';\n\nconst Register: React.FC = () => {\n  const [roomItems, setRoomItems] = useState<Room[]>(JSON.parse(localStorage.getItem('roomItems') || '[]'));\n  const [pk] = useState<string>(uniqueString());\n  const [formData, setFormData] = useForm({\n    address: '',\n    detailAddress: '',\n    realEstate: '',\n    realEstatePriceType: '',\n    depositAmount: 0,\n    rentAmount: 0,\n    maintenanceFee: 0,\n    maintenanceFeeItems: [],\n    floor: '1',\n    sunlightDirection: '',\n    leasableArea: 0,\n    pet: true,\n    canceled: false,\n    thumbnail: '',\n  });\n  const [hasMaintenanceFee, setHasMaintenanceFee] = useState<boolean>(true);\n  const [showKeepModal, setShowKeepModal] = useState<boolean>(!!localStorage.getItem('tempRoomItem'));\n  const [showCompleteModal, setShowCompleteModal] = useState<boolean>(false);\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.name === 'pet' ? JSON.parse(target.value) : target.value,\n    });\n  };\n\n  const toggleMaintenanceFee = () => {\n    setHasMaintenanceFee(prevHasMaintenanceFee => !prevHasMaintenanceFee);\n  };\n\n  const onSubmit = () => {\n    setRoomItems(prevRoomItems => prevRoomItems.concat({\n      ...formData,\n      pk,\n    }));\n\n    setShowCompleteModal(true);\n\n    localStorage.removeItem('tempRoomItem');\n  };\n\n  const addMaintenanceFeeItems = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    if (target.checked) {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        maintenanceFeeItems: prevFormData.maintenanceFeeItems.concat(target.value)\n      }));\n    } else {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        maintenanceFeeItems: prevFormData.maintenanceFeeItems.filter(item => item !== target.value)\n      }));\n    }\n  };\n\n  const setLeasableArea = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      leasableArea: target.name === 'pyeong' ? Number(target.value) * 3.30579 : Number(target.value),\n    }));\n  };\n\n  const keepRegister = () => {\n    const storageFormData = localStorage.getItem('tempRoomItem');\n    setShowKeepModal(false);\n\n    if (storageFormData) {\n      setFormData(JSON.parse(storageFormData));\n    }\n  };\n\n  const changeMaintenanceFee = ({ target: { name, value } }: ChangeEvent<HTMLInputElement>) => {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      maintenanceFee: value === 'SELLING' ? 0 : prevFormData.maintenanceFee,\n      rentAmount: value !== 'MONTHLY' ? 0 : prevFormData.rentAmount,\n      [name]: value,\n    }));\n  }\n\n  useEffect(() => {\n    localStorage.setItem('roomItems', JSON.stringify(roomItems));\n  }, [roomItems]);\n\n  useEffect(() => {\n    if (!hasMaintenanceFee) {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        maintenanceFee: 0,\n      }));\n    }\n  }, [hasMaintenanceFee, setFormData]);\n\n  return (\n    <>\n      <h2 className=\"font-weight-bold text-center\">방 등록하기</h2>\n\n      <RoomForm\n        onChange={onChange}\n        onSubmit={onSubmit}\n        formData={formData}\n        changeMaintenanceFee={changeMaintenanceFee}\n        toggleMaintenanceFee={toggleMaintenanceFee}\n        hasMaintenanceFee={hasMaintenanceFee}\n        addMaintenanceFeeItems={addMaintenanceFeeItems}\n        setLeasableArea={setLeasableArea}\n        buttonText=\"등록하기\"\n      />\n\n      <Modal show={showKeepModal} onHide={() => setShowKeepModal(false)} backdrop=\"static\" centered>\n        <Modal.Header closeButton>\n          <Modal.Title>방 정보가 있음</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p>입력된 방 정보가 있습니다. 이어서 등록하실래요 ???</p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowKeepModal(false)}>새로 등록</Button>\n          <Button variant=\"primary\" onClick={keepRegister}>이어서 등록</Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showCompleteModal} onHide={() => setShowCompleteModal(false)} backdrop=\"static\" centered>\n        <Modal.Body>\n          <p>방이 등록되었습니다.</p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Link to=\"/rooms\">\n            <Button variant=\"secondary\">목록으로 가기</Button>\n          </Link>\n          <Link to={`/room/${pk}`}>\n            <Button variant=\"primary\">확인</Button>\n          </Link>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default Register;","import React, { useState, useEffect } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport { Room, RealEstates, RealEstatePriceTypes, MaintenanceFeeItems, SunlightDirections, Floors } from '../types/instances';\nimport { MatchParams } from '../types/params';\n\nconst Detail: React.FC<RouteComponentProps<MatchParams>> = ({ match }: RouteComponentProps<MatchParams>) => {\n  const realEstates: RealEstates = {\n    'ONE_ROOM': '원룸',\n    'TWO_ROOM': '투룸',\n    'APARTMENT': '아파트',\n    'EFFICIENCY_APARTMENT': '오피스텔',\n  };\n\n  const realEstatePriceTypes: RealEstatePriceTypes = {\n    'MONTHLY': '월세',\n    'JEONSE': '전세',\n    'SELLING': '매매',\n  };\n\n  const maintenanceFeeItems: MaintenanceFeeItems = {\n    'ELECTRIC': '전기',\n    'GAS': '가스',\n    'WATERWORKS': '수도',\n    'INTERNET': '인터넷',\n    'TV': 'TV',\n  };\n\n  const sunlightDirections: SunlightDirections = {\n    'EAST': '동',\n    'WEST': '서',\n    'SOUTH': '남',\n    'NORTH': '북',\n    'SOUTH_EAST': '남동',\n    'SOUTH_WEST': '남서',\n    'NORTH_WEST': '북서',\n    'NORTH_EAST': '북동',\n  };\n\n  const floors: Floors = {\n    'ROOFTOP': '옥탑',\n    'SEMI_BASEMENT': '반지하',\n  };\n\n  const [roomItems, setRoomItems] = useState<Room[]>(JSON.parse(localStorage.getItem('roomItems') || '[]'));\n  const [room, setRoom] = useState<Room | undefined>(roomItems.find(room => room.pk === match.params.roomPK));\n\n  const toggleCancel = () => {\n    setRoom((prevRoom) => {\n      if (prevRoom) {\n        const nextRoom: Room = {\n          ...prevRoom,\n          canceled: !prevRoom.canceled\n        };\n\n        setRoomItems((prevRoomItems) =>\n          prevRoomItems.map(item =>\n            item.pk === prevRoom.pk\n              ? nextRoom\n              : item\n          )\n        );\n        return nextRoom;\n      }\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem('roomItems', JSON.stringify(roomItems));\n  }, [roomItems]);\n\n  return (\n    <div>\n      {\n        !!room &&\n        <>\n          <Card>\n            <Card.Img variant=\"top\" src={room.thumbnail} />\n            <Card.Body>\n              <Card.Text>\n                <span><b>주소:</b> {room.address}</span><br />\n                <span><b>상세주소:</b> {room.detailAddress}</span><br />\n                <span><b>매물종류</b>: {realEstates[room.realEstate]}</span><br />\n                <span><b>가격</b>: [{realEstatePriceTypes[room.realEstatePriceType]}]</span>\n                <span>{Number(room.depositAmount).toLocaleString()} 원</span>\n                {\n                  !!room.rentAmount \n                  ? <><span> / {Number(room.rentAmount).toLocaleString()} 원</span><br /></>\n                  : <br />\n                }\n                {\n                  !!room.maintenanceFee &&\n                  <><span><b>관리비</b>: {Number(room.maintenanceFee).toLocaleString()} 원</span><br /></>\n                }\n                {\n                  !!room.maintenanceFeeItems.length &&\n                  <><span><b>관리비 포함 항목:</b> {\n                    room.maintenanceFeeItems.map(item => maintenanceFeeItems[item]).join(', ')\n                  }</span><br /></>\n                }\n                <span><b>층수</b>: {\n                  isNaN(parseInt(room.floor)) ? floors[room.floor] : room.floor + '층'\n                }</span> <br />\n                <span><b>방향</b>: {sunlightDirections[room.sunlightDirection]}</span> <br />\n                <span><b>전용면적</b>: {Number(room.leasableArea).toFixed(3)} m2</span> <br />\n                <span><b>반려동물</b>: {room.pet ? '가능' : '불가능'}</span>\n              </Card.Text>\n              {\n                room.canceled\n                  ? <>\n                    <Button className=\"mr-2\" variant=\"outline-dark\" onClick={toggleCancel}>방 올리기</Button>\n                    <Link to={`/room/edit/${room.pk}`}>\n                      <Button variant=\"outline-secondary\">방 정보 수정</Button>\n                    </Link>\n                  </>\n                  : <Button variant=\"dark\" onClick={toggleCancel}>방 내리기</Button>\n              }\n            </Card.Body>\n          </Card>\n        </>\n      }\n    </div>\n  );\n}\n\nexport default Detail;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Room, RealEstates } from '../types/instances';\n\ntype P = {\n  room: Room\n};\n\nconst RoomCard: React.FC<P> = ({ room }: P) => {\n  const realEstates: RealEstates = {\n    'ONE_ROOM': '원룸',\n    'TWO_ROOM': '투룸',\n    'APARTMENT': '아파트',\n    'EFFICIENCY_APARTMENT': '오피스텔',\n  };\n\n  return (\n    <Card>\n      <Card.Img variant=\"top\" src={room.thumbnail} />\n      <Card.Body>\n        <Card.Title>{room.address}</Card.Title>\n        <Card.Text>\n          [{realEstates[room.realEstate]}] {Number(room.depositAmount).toLocaleString()} 원\n          {\n            !!room.rentAmount &&\n            <>/ {Number(room.rentAmount).toLocaleString()}</>\n          }\n          {\n            !!room.maintenanceFee &&\n            <> (관리비: {Number(room.maintenanceFee).toLocaleString()} 원)</>\n          }\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RoomCard;","import React from 'react';\nimport { Tabs, Tab, Row, Col, Button } from 'react-bootstrap';\nimport RoomCard from '../components/RoomCard';\nimport { Link } from 'react-router-dom';\nimport { Room } from '../types/instances';\n\nconst List: React.FC = () => {\n  const roomItems: Room[] = JSON.parse(localStorage.getItem('roomItems') || '[]');\n\n  return (\n    <>\n      <Tabs defaultActiveKey=\"uncancelled\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n        <Tab eventKey=\"uncancelled\" title=\"올린 방\">\n          <Row xs={1} md={2} className=\"g-4\">\n            {\n              roomItems.filter(room => !room.canceled)\n                .map(uncancelledRoom => (\n                  <Col key={uncancelledRoom.pk} className=\"my-2\">\n                    <Link to={`/room/${uncancelledRoom.pk}`} className=\"no-deco-link\">\n                      <RoomCard key={uncancelledRoom.pk} room={uncancelledRoom}></RoomCard>\n                    </Link>\n                  </Col>\n                ))\n            }\n          </Row>\n        </Tab>\n        <Tab eventKey=\"cancelled\" title=\"내린 방\">\n          <Row xs={1} md={2} className=\"g-4\">\n            {\n              roomItems.filter(room => room.canceled)\n                .map(cancelledRoom => (\n                  <Col key={cancelledRoom.pk} className=\"my-2\">\n                    <Link to={`/room/${cancelledRoom.pk}`} className=\"no-deco-link\">\n                      <RoomCard key={cancelledRoom.pk} room={cancelledRoom}></RoomCard>\n                    </Link>\n                  </Col>\n                ))\n            }\n          </Row>\n        </Tab>\n      </Tabs >\n      <Link to=\"/room/register\">\n        <Button variant=\"success\" size=\"lg\" style={{ position: 'fixed', bottom: 60, left: '50%', transform: 'translateX(-50%)' }}>방 등록하기</Button>\n      </Link>\n    </>\n  );\n};\n\nexport default List;","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport RoomForm from '../components/RoomForm';\nimport { Room } from '../types/instances';\nimport { MatchParams } from '../types/params';\n\nconst Edit: React.FC<RouteComponentProps<MatchParams>> = ({ match, history }: RouteComponentProps<MatchParams>) => {\n  const [roomItems, setRoomItems] = useState<Room[]>(JSON.parse(localStorage.getItem('roomItems') || '[]'));\n  const [formData, setFormData] = useState<Room | undefined>(roomItems.find(item => item.pk.toString() === match.params.roomPK));\n  const [hasMaintenanceFee, setHasMaintenanceFee] = useState<boolean>(true);\n  const [showCompleteModal, setShowCompleteModal] = useState<boolean>(false);\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setFormData(prevFormData => {\n      if (prevFormData) {\n        return {\n          ...prevFormData,\n          [target.name]: target.name === 'pet' ? JSON.parse(target.value) : target.value,\n        };\n      }\n    });\n  };\n\n  const toggleMaintenanceFee = () => {\n    setHasMaintenanceFee(!hasMaintenanceFee);\n  };\n\n  const onSubmit = () => {\n    if (formData) {\n      setRoomItems(prevRoomItems =>\n        prevRoomItems.map(item =>\n          item.pk === formData.pk\n            ? formData\n            : item\n        )\n      );\n    }\n\n    setShowCompleteModal(true);\n  };\n\n  const addMaintenanceFeeItems = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    if (target.checked) {\n      setFormData(prevFormData => {\n        if (prevFormData) {\n          return {\n            ...prevFormData,\n            maintenanceFeeItems: prevFormData.maintenanceFeeItems.concat(target.value)\n          };\n        }\n      });\n    } else {\n      setFormData(prevFormData => {\n        if (prevFormData) {\n          return {\n            ...prevFormData,\n            maintenanceFeeItems: prevFormData.maintenanceFeeItems.filter(item => item !== target.value)\n          };\n        }\n      });\n    }\n  };\n\n  const setLeasableArea = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setFormData(prevFormData => {\n      if (prevFormData) {\n        return {\n          ...prevFormData,\n          leasableArea: target.name === 'pyeong' ? Number(target.value) * 3.30579 : Number(target.value),\n        }\n      }\n    });\n  };\n\n  const changeMaintenanceFee = ({ target: { name, value } }: ChangeEvent<HTMLInputElement>) => {\n    setFormData(prevFormData => {\n      if (prevFormData) {\n        return {\n          ...prevFormData,\n          maintenanceFee: value === 'SELLING' ? 0 : prevFormData.maintenanceFee,\n          rentAmount: value !== 'MONTHLY' ? 0 : prevFormData.rentAmount,\n          [name]: value,\n        }\n      }\n    });\n  };\n\n  const registerRoom = () => {\n    if (formData) {\n      localStorage.setItem('roomItems', JSON.stringify(roomItems.map(item =>\n        item.pk === formData.pk\n          ? {\n            ...formData,\n            canceled: !formData.canceled\n          }\n          : item\n      )));\n\n      history.push('/rooms');\n    }\n  };\n\n  useEffect(() => {\n    if (!hasMaintenanceFee) {\n      setFormData(prevFormData => {\n        if (prevFormData) {\n          return {\n            ...prevFormData,\n            maintenanceFee: 0,\n          }\n        }\n      });\n    }\n  }, [hasMaintenanceFee, setFormData]);\n\n  useEffect(() => {\n    localStorage.setItem('roomItems', JSON.stringify(roomItems));\n  }, [roomItems]);\n\n  if (!formData) {\n    return null;\n  }\n\n  return (\n    <>\n      <h2 className=\"font-weight-bold text-center\">방 수정하기</h2>\n      <RoomForm\n        onChange={onChange}\n        onSubmit={onSubmit}\n        formData={formData}\n        changeMaintenanceFee={changeMaintenanceFee}\n        toggleMaintenanceFee={toggleMaintenanceFee}\n        hasMaintenanceFee={hasMaintenanceFee}\n        addMaintenanceFeeItems={addMaintenanceFeeItems}\n        setLeasableArea={setLeasableArea}\n        buttonText=\"수정하기\"\n      />\n\n      <Modal show={showCompleteModal} onHide={() => setShowCompleteModal(false)} backdrop=\"static\" centered>\n        <Modal.Body>\n          <p>방이 수정되었습니다.</p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Link to=\"/rooms\">\n            <Button variant=\"secondary\">목록으로 가기</Button>\n          </Link>\n          <Button variant=\"primary\" onClick={registerRoom}>방 올리기</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default Edit;","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Home from './pages/Home';\nimport Register from './pages/Register';\nimport Detail from './pages/Detail';\nimport List from './pages/List';\nimport Edit from './pages/Edit';\n\nconst App: React.FC = () => {\n  return (\n    <Container className=\"py-4\">\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Home} />\n        <Switch>\n          <Route exact path=\"/room/register\" component={Register} />\n          <Route exact path=\"/room/:roomPK\" component={Detail} />\n        </Switch>\n        <Route exact path=\"/rooms\" component={List} />\n        <Route exact path=\"/room/edit/:roomPK\" component={Edit} />\n      </BrowserRouter>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// roomItems.js\nimport { Room } from './types/instances';\nimport uniqueString from 'unique-string';\n\nexport const roomItems: Room[] = [\n\t{\n\t\t\"pk\": uniqueString(),\n\t\t\"address\": \"서울 성동구 왕십리로 125\", // 주소\n\t\t\"detailAddress\": \"KD타워 101호\", // 상세주소\n\t\t\"realEstate\": \"APARTMENT\", // 매물종류\n\t\t\"realEstatePriceType\": \"JEONSE\", // 가격종류\n\t\t\"depositAmount\": 200000000, // 보증금 또는 매매가\n\t\t\"rentAmount\": 0, // 임대료\n\t\t\"maintenanceFee\": 100000, // 관리비\n\t\t\"maintenanceFeeItems\": [\"ELECTRIC\"], // 관리항목\n\t\t\"floor\": \"1\", // 층수\n\t\t\"sunlightDirection\": \"NORTH\", // 방향\n\t\t\"leasableArea\": 119.00, // 평수, m2\n\t\t\"pet\": true, // 애완동물 여부\n\t\t\"thumbnail\": \"https://static.zaritalk.com/images/img-default-thumbnail@2x.png\", // 썸네일 주소\n\t\t\"canceled\": false // 올린방, 내린방 여부\n\t},\n\t{\n\t\t\"pk\": uniqueString(),\n\t\t\"address\": \"서울 성동구 왕십리로 125\",\n\t\t\"detailAddress\": \"KD타워 반지하\",\n\t\t\"realEstate\": \"APARTMENT\",\n\t\t\"realEstatePriceType\": \"SELLING\",\n\t\t\"depositAmount\": 500000000,\n\t\t\"rentAmount\": 0,\n\t\t\"maintenanceFee\": 0,\n\t\t\"maintenanceFeeItems\": [],\n\t\t\"floor\": \"1\",\n\t\t\"sunlightDirection\": \"SOUTH\",\n\t\t\"leasableArea\": 33.05,\n\t\t\"pet\": false,\n\t\t\"thumbnail\": \"https://static.zaritalk.com/images/img-default-thumbnail@2x.png\",\n\t\t\"canceled\": false\n\t},\n\t{\n\t\t\"pk\": uniqueString(),\n\t\t\"address\": \"서울 성동구 왕십리로 125\",\n\t\t\"detailAddress\": \"KD타워 710호\",\n\t\t\"realEstate\": \"EFFICIENCY_APARTMENT\",\n\t\t\"realEstatePriceType\": \"MONTHLY\",\n\t\t\"depositAmount\": 200000000,\n\t\t\"rentAmount\": 1000000,\n\t\t\"maintenanceFee\": 50000,\n\t\t\"maintenanceFeeItems\": [\"ELECTRIC\", \"WATERWORKS\"],\n\t\t\"floor\": \"7\",\n\t\t\"sunlightDirection\": \"SOUTH_EAST\",\n\t\t\"leasableArea\": 231.40,\n\t\t\"pet\": false,\n\t\t\"thumbnail\": \"https://static.zaritalk.com/images/img-default-thumbnail@2x.png\",\n\t\t\"canceled\": true\n\t}\n];","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { roomItems } from './roomItems';\n\nif (!localStorage.getItem('roomItems')) {\n  localStorage.setItem('roomItems', JSON.stringify(roomItems));\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}